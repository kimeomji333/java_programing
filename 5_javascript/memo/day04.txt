24-08-12 월요일

객체
	프로퍼티(필드)와 메소드들을 하나로 가지고 있는 집합체

객체 선언
	1. 리터럴 표기법	-> 서버 구축 등 복잡한 형태를 보지 않으니, 우리는 이 정도로 사용한다.
		const 객체명 = {
			프로퍼티1 : 값1,
			프로터피2 : 값2, 
			...
			메소드명 : function(){

			},
			...
		}
 
	2. 생성자를 이용한 선언 -> 우리는 똑같은 객체를 만들 일이 없으니, 잘 사용하지 않는다.
		자바에서는 도장으로 찍어냄 클래스
		자바클래스에서는 레시피 대로 만들다보니 객체가 만들어지는 느낌

		function 생성자명(매개변수1, 매개변수2, ...){
			this.프로퍼티1 = 값1,	
			this.프로퍼티2 = 값2,
			...
			this.메소드명 = function(){
		
			}
			...
		}

프로토타입
자바는 클래스에서 상속 받지만(대표적으로 최상위 클래스인 Object),
자바스크립트는 객체를 상속받는다.(오홍 오히려 현실에 더 가깝다) 하나 이상의 객체를 상속 받는다. 그 상속 받는 객체를 프로토타입이라고 한다. 
리터럴 표기법은 Object 형 프로토타입
뭐야 결국엔 Object 객체를 상속받은 객체를 다시 상속받는거야
생성자를 만들어질 수 있는 초기 모델을 프로토타입이라고 한다.

	자바스크립트의 모든 객체는 프로토타입이라는 객체를 상속받는다.
	자바스크립트의 모든 객체는 최소한 하나 이상의 다른 객체로부터 상속을 받으며
	그 상속되는 정보를 제공하는 객체를 프로토타입이라고 한다.
	생성자를 선언하면 자신의 내용을 만들어지는 초기 모델 객체를 프로토타입으로 가지게 된다.

	생성자명.prototype --> 해당 생성자의 프로토타입

콜백함수(Callback Function)
	파라미터로 함수를 전달받아서 내부에서 해당 함수를 호출하는 방식

문서 객체 모델(Document Object Model, DOM)
	JS에서 HTML 문서를 컨트롤하기 위해 DOM 인터페이스를 사용
	Java에서 DB Document를 컨트롤하기 위해 JDBC 인터페이스를 사용
	
	XML이나 HTML 문서에 접근하기 위한 일종의 인터페이스
	문서내의 모든 요소를 정의하고 요소에 접근하여 컨트롤 하는 방법들을 제공 EX. innerHTML..

document 객체
	웹 페이지 문서 자체를 의미
	웹 페이지에 존재하는 HTML 요소에 접근할 때에는 반드시 document 객체부터 시작

요소 찾기
	getElementById()	: 해당 값을 id 속성으로 가지고 있는 요소 선택
	getElementsByClassName(): 해당 값을 class 속성으로 가지고 있는 요소들을 선택
	getElementsByTagName()	: 해당 태그들로 만들어진 요소들을 선택
	getElementsByName()	: 해당 값을 name 속성으로 가지고 있는 요소들을 선택

	querySelector()		: css 선택자에 해당하는 요소 선택
	querySelectorAll()	: css 선택자에 해당하는 요소들을 선택





예를 들면, 거울 보고 내 얼굴에 점을 찍으면, 거울에 점이 찍힌 내가 보임.
문서를 만들면 JS안에 객체화해서 트리구조로 이미 만들어져있는 것을 
DOM 인터페이스를 이용해서 구조화되어 있는 node에 변화를 시키면 실제 문서에도 적용이 된다는 것.


-------------- 문서 객체 모델 DOM 에 대해 공부해 보자 -------------
[DOM 기본 개념]
DOM 
웹페이지의 구조와 내용, 스타일을 조작할 수 있게 해주는 인터페이스로
JS와 DOM을 사용하면 HTML 문서 요소를 동적으로 변경하고 조작할 수 있다.

HTML 문서를 객체 트리 구조로 표현한 모델이다. 
문서의 각 요소가 객체로 표현되며, 객체 간의 관계를 통해 문서 구조를 나타낸다.

문서 객체
- DOM의 최상위 객체로, 전체 HTML 문서를 나타낸다.
- document객체를 통해 DOM에 접근하고 조작할 수 있다.

요소 노드
- HTML 문서의 각 태그를 나타내는 객체이다.
- 요소 노드는 부모와 자식 관계를 가진다.

속성 노드
- HTML 태그 속성(id, class, href)을 나타내는 객체이다.
- 요소 노드의 속성으로 접근할 수 있다.

텍스트 노드
- HTML 요소의 텍스트 컨텐츠를 나타내는 객체이다.
- 요소 노드의 자식으로 존재한다.


[DOM 접근 조작방법]
요소 선택
document.querySelector() : CSS 선택자를 사용해
document.getElementById() : ID를 사용해
document.getElementsByClassName(): 클래스 이름을 사용해
document.getElementsByTagName(): 태그 이름을 사용해

요소 내용 및 속성 변경
textContent : 요소의 텍스트 내용을 변경하거나 가져온다.
innerHTML
setAttribute() / getAttribute()

요소 추가 및 삭제
appendChild()
removeChild()
createElement()
createTextNode()

이벤트 처리
addEventListener()
removeEventListener()

