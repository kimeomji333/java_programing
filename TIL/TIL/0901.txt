spring 복습

1. 프로젝트 만들기
2. 설정
    pom.xml > dependency : 필요한 라이브러리 다운 받기
        - Spring Web
        - Spring Boot DevTools
        - MyBatis Framework
        - MySQL Driver
        - Lombok
    application-properties : 설정 관리 파일
        - Spring MVC의 ViewResolver 설정
        - MyBatis의 DB 연결 설정
        - MySQL DB 연결 설정

        -> 코드
            spring.mvc.view.preifx=/views/
            spring.mvc.view.suffix=.jsp

            mybatis.config-location=classpath:/mybatis-config.xml
            mybatis.mapper-location=classpath:/mapper/**/*.xml

            spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
            spring.datasource.url=jdbc:mysql://localhost:3306/gb
            spring.datasource.username=
            spring.datasource.password=

    resource > mapper folder
             > mybatis-config.xml
                <?xml version="1.0" encoding="UTF-8" ?>

                <!DOCTYPE configuration
                    PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
                    "https://mybatis.org/dtd/mybatis-3-config.dtd">
                <configuration>
                    <settings>
                        <setting name="mapUnderscoreToCamelCase" value="true" />
                    </settings>
                </configuration>

3. 디텍터리 구조 만들기
    controller
    model.dto
    
    src > main > webapp > views > user

4. class 파일

+ 공부한 내용
controller  
    입력 > 요청 > 데이터수집(컨) > 처리 > 응답생성과 응답(컨) > 출력

model
    사용자에게 응답할 데이터를 보내준다.

    예시 코드
        @GetMapping("b")
        public String b(int num1, int num2, Model model){
            int result = num1+num2;
            model.addAttribute("result", result);
            return "c";
        }

HttpServletRequest 
    클라이언트 요청 자체를 의미하는 객체, 요청에 관한 모든 정보들을 가지고 있다.

HttpServletResponse
    응답 객체로 세팅해서 클라이언트에 보낼 수 있다.

쿠키
    요청 헤더 안에 들어있다. 요청 객체에서 확인해보자.
    예시 코드
        @GetMapping("getCookie)
        public String getCookie(HttpServletRequest req){
            String check = req.getHeader("Cookie");

            if(check != null){
                Cookie[] cookies = req.getCookies();
                for(int i = 0; i < cookies.length; i++){
                    Cookie cookies = cookies[i];
                    syso("cookie.getName + " : " + cookie.getValue);
                }
            } else{
                syso("쿠키 존재안함");
            }
        }

    응답객체를 만들어서 쿠키를 세팅해줄 수 있다.
    예시 코드
        @GetMapping("setCookie)
        public void setCookie(HttpServletResponse resp){
            Cookie cookie = new Cookie("weather", "so_hot");
            Cookie cookie = new Cookie("winter", "is_comming");

            resp.addCookie(cookie1);
            resp.addCookie(cookie2);
        }

    쿠키 수정
        @GetMapping("updateCookie")
        public void updateCookie(HttpServletRequest req, HttpServletResponse resp){
            String check = req.getHeader("Cookie");

            if(check != null) {
                Cookie[] cookis = req.getCookie();
                for(Cookie cookie : cookies){
                    if(cookie.getName().equals("weatehr")){
                        cookie.setValue("is_so_good");
                        resp.addCookie(cookie);
                        break;
                    }
                }
            } else{
                syso("쿠키 없음");
            }
        }

    쿠키 삭제
        @GetMapping("deleteCookie")
        public void deleteCookie(HttpServletRequest req, HttpServletResponse resp){
            String check = req.getHeader("Cookie");

            if(check != null){
                Cookie[] cookies = req.getCookie();
                for(Cookie cookie : cookies){
                    if(cookie.getName().equals("weater")){
                        cookie.setMaxAge(0);
                        resp.addCookie(cookie);
                        break;
                    }
                }
            } else{
                syso("쿠키 없음");
            }
        }

    세션 세팅
        @GetMapping("setSession")
        public void setSession(HttpServletRequest req){
            HttpSession session = req.getSession();
            sesison.setAttribute("loginUser", "apple");
        }

    세션 가져오기
        @GetMapping("getSeesion")
        public void getSeesion(HttpServletRequest req){
            HttpSession session = req.getSeesion();
            syso("session.getAttribute("loginUser"));
        }




