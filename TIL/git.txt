오늘 배운 git 명령어에 대한 정리

1 day 
git add . 로 전체 내용으로 업로드하느라, 파일만 따로 작업하는 기회가 없었다. 
커밋 기록을 분류해서 올리고 싶어 파일만 따로 올리는데, 문제가 발생했다. 

첫 번째, 파일명에 공백과 특수문자를 사용시에
    1. java 이런식의 파일명을 git이 인식하게 하는데 ""큰따옴표와 이스케이프 문자 사용하는 것을 알게 되었다.
    git add "1. java" 또는
    git add 1.\ java

두 번째, 파일명 변경하기
    git mv oldfile.txt newfile.txt

세 번째, git status에서 deleted 기록이 남아있는 것에 대해서 삭제된 파일들을 git에 반영하기
    파일명 변경으로 깃허브에 push를 하다가 내pc에서는 파일이 지워졌지만, git status 기록에서는 남아있는 경우

    deleted:    5. javascript/memo/day01.txt
    ....

    git에서 삭제된 파일들을 확인하고, 삭제를 커밋하기 위해서 -u 옵션을 사용하였다. 
    현재 작업 디렉토리에서 삭제된 파일들만 인식하고 스테이징하도록 한다.
    git add -u

    그 다음 커밋과 원격저장소에 푸시까지 해주면 끝

+ 중간에 변경사항 확인하자. git status
+ 파일이 잘 바뀌었는지 디렉토리 구조 확인하자. ls -l 


2 day 
수정한 파일 롤백하는 방법이 궁금해서 공부한 내용

git 로그 기록 확인 가능
    git log --oneline

특정 파일들만 올리고 싶다면 그 경로(cd)로 들어가서 add . 하는 방법이 있다.
    ex) cd 6_spring/workspace/demo_me 안에 있는 파일들 전부 올리기

수정한 파일 되돌리기(변경사항 전으로 돌아가기)
    git checkout -- file.txt

또는 현재 디렉토리에 있는 모든 변경 사항을 버리고 원상태로 돌아가려면
    git restore .

파일은 되돌리기가 안되서 폴더 삭제를 해야했다.
    rm -r 폴더명

폴더안의 리스트를 보려면 (경로로 들어가서 볼 수 있다)
    ls

경로에서 나오려면 상위 경로 
    cd ..






