24-07-16 화요일

---- to do list today -----
1. 팀플 영화관 자료 조사(테이블 설계)
2. sql 공부(이번주)

join 
	여러 테이블에 흩어져 있는 정보 중 사용자(개발자)가 필요한 정보만 가져와서
	가상의 테이블처럼 만들고 결과를 보여주는 기법

	내부 조인(inner join)
		inner 키워드 생략 가능
		조건이 일치하는 값이 두 테이블에 모두 존재할 때 조회(그렇지 않은 경우에는 데이터가 포함되지 않는다.)

	외부 조인(outer join)
		조인하는 테이블 중 조건이 거짓이라도 한 쪽 테이블의 모든 정보는 검색되어야 할 때 사용한다.
		주 테이블의 모든 정보가 필요할 땐 left outer join, 
		보조 테이블의 모든 정보가 필요할 땐 right outer join

join ~ using
	두 테이블을 join할 때 이름이 같은 컬럼의 값을 비교하는 것이 조건이라면
	using으로 간단하게 작성할 수 있다.

limit
	검색 결과의 개수를 제한하는 문법
	오라클 X 

	limit n		: 첫 행부터 n개 검색
	limit n,m	: n개 행은 건너뛰고, m개 검색(첫 행이 0행이라 치면, n행부터 m개 검색)

Sub Query
	SQL문 내부에 SQL문을 작성

	select	: Scalar
	from	: inline view
	where

DBMS의 계정
	root 계정		: 모든 권한을 가지고 있음
	사용자 생성 계정	: 생성만 하고 권한을 부여하지 않으면 아무것도 할 수 없음
		- 시스템 접속 또한 권한을 받지 않으면 불가능
		- 데이터베이스, 테이블, 뷰, 프로시져 등의 생성, 삭제, 수정 불가능
		- 데이터 추가, 삭제, 수정, 조회 등 불가능
		- 다른 계정에 권한 부여, 권한 회수 불가능

		위의 것들을 가능하게 하려면 root 계정으로 권한을 부여해 주어야 한다. 

JDBC(Java Database Connectivity)
	자바에서 데이터베이스로 접속할 수 있도록 도와주는 자바 API
	
	Connection		: DBMS(MySQL)와 Java 프로그램을 연결해주는 다리 역할
	PreparedStatement	: 연결된 다리 위를 왔다갔다 하며 쿼리문을 전달해줄 택배차 역할
	ResultSet		: select문 수행 시 나오는 검색 결과를 답장으로 가지고 오는 타입

	1. Java에서 문자열 타입으로 SQL문을 작성
	2. 설치된 Driver(com.mysql.cj.jdbc.Driver) 를 이용해서 Connection 객체 생성
	3. 만들어진 Connection 객체를 통해 PreparedStatement 객체 생성
	4. PrdparedStatement 객체를 통해 쿼리문 완성 시키고 수행
		-> ?로 쿼리문을 만든 경우엔 ps.set~~을 통해 쿼리문 완성하기
		-> .executeUpdate() / .executeQuery()
	5. SQL문(select) 수행 후 결과를 ResultSet 타입의 객체로 받기
		-> rs.next()를 통해 한 행씩 가져오며
		-> rs.get~~("컬럼명")를 통해 그 행의 해당 컬럼값을 가져오기

