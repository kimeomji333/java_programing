24-07-09 화

MVC 모델(패턴)
	소프트웨어 설계시 사용되는 디자인 패턴
	만드는 방법이 아닌 "잘" 만들기에 대해 배우는 것
	
	M : Model	(데이터와 대응) - 데이터를 넘겨주기 위한 포장
	V : View	(보여지는 화면) - 입력/출력
	C : Controller	(흐름/처리을 제어하는 역할) - 처리

MVC1 모델
	View, Controller가 함께 공존하는 형태

MVC2 모델
	View, Controller가 완벽하게 분리된 형태

DTO(Data Transfer Object) = VO(Value Object)
	데이터 전송 객체
	양쪽으로 전송되어 오고가는 데이터들을 담은 객체
	여러 데이터들을 포장해서 만드는 데이터 포장 객체

DAO(Data Access Object)
	데이터에 접근 객체
	데이터들을 관리하는 여러 메소드들이 정의되어있다.
	데이터베이스 접근용 객체

-------------------------------------------------------------
예제 시작이다 ! ! !

기획/DB설계
기능
데이터파악(데이터에 대한 정의)
데이터베이스 (테이블)설계/구축
데이터가 저장되는 공간: 테이블

하나의 객체마다 한 줄씩 찾음(열, 컬럼)

Index(태초마을) - 웹사이트 화면 출력 (타이틀 출력 중요) - 요즘엔 메인 화면에 다 영상을 넣는 구낭 ~
main
syso("별표")
while(true)
syso(번호)
int choice
if(choice ==1)
else if()
else if() - break;

try-catch, else 생략

이동할 때 데이터 처리가 필요한지 (없음) - 단순 처리 (controller 들리지 않고 바로 view로 감) new JoinView()
Scanner
syso("회원가입 페이지")
입력값 받기 - 아이디(db에서 중복체크), 비밀번호, 비번확인(프론트에서 해결가능), 이름, 나이, 핸드폰 번호, 주소
백엔드에서 db 체크해야 한다면 controller를 들린다. 

controller에서는 checkId를 하고,
db에서는 select를 한다. - Model에서

-> UserController에서 checkId()
만들어진 API 사용하기 위해서 DBConnection 인스턴스화
UserDAO에서 getUserByUserid(String userid)로 DB 접근










데이터 저장을 제외한 로직을 비즈니스 로직(실제 알고리즘)
+ 데이터 로직이 쓰일 수 있다. ex.크롤링, 원격호출? 등등














