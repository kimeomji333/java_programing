package day04;

public class MethodTask {
	public static void main(String[] args) {
		MethodTask mt = new MethodTask();
		
		String str = "ABCD";
		System.out.println(mt.reverseStr(str));
	}
		
	
	
//		// 1번. 1 ~ 10 출력하는 메소드
//		void printNum() {
//			for(int i = 1; i <= 10; i++) {
//				System.out.println(i);
//			}
//		}
//		
//		
//		// 2번. 1 ~ 10 합 구해주는 메소드
//		int sumToTen() {
//			int sum = 0;
//			for(int i = 1; i <= 10; i++) {
//				sum += i;
//			}
//			return sum;
//		}
//		
//		
//		
//		// 3번. 1 ~ n 합 구해주는 메소드
//		int sumToN(int n) {
//			int sum = 0;
//			for(int i = 1; i <= n; i++) {
//				sum += i;
//			}
//			return sum;
//		}
//		
//		
//		
//		// 4번. 두 정수의 나눗셈 결과를 구해주는 메소드
//		int divide(int n, int m) {
//			return n/m;
//		
//		
//		// 5번. 어떤 문자열을 n번만큼 출력하는 메소드
//		void printString(String str, int n) {
//			for(int i = 0; i < n; i++) {
//				System.out.println(str);
//			}
//		}
//		
//		
//		// 6번. n부터 m까지의 합 구해주는 메소드(n이 m보다 작다고 가정)
//		int sumFromNtoM(int n, int m) {
//			int sum = 0;
//			for(int i = n; i <= m; i++) {
//				sum += i;
//			}
//			return sum;
//		}
		
		
//		// 7번. 문자열을 전부 대문자로 바꿔주는 메소드(hello~123 -> HELLO~123) - 아스키코드 이용
//		void changeUpper(String str) {
//			char ch = 0;
//			
//			// (반복문을 이용해) 문자열을 문자로 변환 : charAt()메소드 이용
//			for(int i = 0; i < str.length(); i++) {
//				ch = str.charAt(i);
//			}
//			
//			// (조건문을 이용해) 소문자인 경우, 대문자로 바꿔주는 로직 작성 // 32차이 이용?? // ch - 'a' + 'A' 이런 식도 있구나.
//			if(ch >= 'a' && ch <= 'z') {
//				char up = (char)(ch - 'a' + 'A'); 
//			} 	
//		}
		
		
		// 8번. 문자열을 거꾸로 바꿔주는 메소드(Hello -> olleH)
		String reverseStr(String str) {
			String reverse = "";
			
			// 처음 문자가 마지막 문자가 될 수 있도록
			// 문자열을 문자로 변환
			for(int i = str.length(); i >= 0; i--) {
				reverse = reverse + str.charAt(i);
			}
			return reverse;
		}
	
		
		
		// 9번. 문자열이 숫자로 이루어져 있는지 검사하는 메소드(숫자가 아닌것이 포함되어 있다면 false)
		
		
		
		// 10번. 문자열의 소문자는 대문자로, 대문자는 소문자로 바꿔주는 메소드(hEllo~123 -> HeLLO~123)
		
		
		// 11번. 정수를 한글로 바꿔주는 메소드(1024 -> 일공이사)
		
}
