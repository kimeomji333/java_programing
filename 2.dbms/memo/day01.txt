DB(데이터베이스)
	데이터들의 집합소(저장소)
	단순한 하나의 파일
	
DBMS(DataBase Management Systme)
	데이터베이스를 관리하는 시스템(프로그램)
	오라클, 마리아DB, MySQL, MSSQL, 몽고DB, ...
	
테이블(Table)
	특정 집단(엔티티)에 대한 데이터가 표 형태로(행, 열) 저장되는 공간
	테이블을 설계한다(특정 데이터들이 들어올 수 있도록 공간을 확보하고 체계적으로 틀을 잡아준다)
	ex) 회원 테이블 설계: 회원 데이터에는 아이디, 비밀번호, 이름, ... 이 있다.

Row(행, 레코드, 튜플)
	하나의 데이터
	그 줄의 모든 데이터들은 하나의 대상에 대한 데이터이다.

		자동차 테이블
	모델	색깔	가격
	페라리	빨강	70000
	아우디	검정	9000

Column(열, 속성, 필드)
	공통된 값들의 주제
	그 열의 모든 데이터들은 같은 속성(타입, 성질, 의미 등)의 데이터이다.
	
RDBMS(Relational DataBase Management System)
	관계형 데이터베이스 관리 시스템
	테이블들끼리 서로 관계를 맺은 채 설계되는 데이터베이스 관리 시스템

	회원 테이블[아이디, 이름, 연락처, 주소, ...]
	상품 테이블[상품 번호, 상품명, 상품 가격, ...]
	주문 테이블[주문 번호, 주문자 아이디, 주문한 상품 번호, 주문일시, ...]

Primary key(PK)
	고유한 값(각 데이터들의 구별점 역할)
	중복이 불가능하고 비어있지 않음
	아이디, 상품번호, 게시글번호, ...
	
Foreign key(FK)
	외래키
	다른 테이블과의 관계를 맺고 설계할 때 참조할 수 있는 키
	외래키로 설정된 컬럼은 다른 테이블에 있는 값을 가져와서 넣어야 한다.
	보통 다른 테이블에 있는 데이터의 PK를 가지고 와서 넣는다.

MySQL
	세계에서 가장 많이 쓰이는 오픈 소스의 RDBMS이다.
	다양한 운영체제에서 다양한 언어로 활용 가능하다.
	표준 SQL 문법 형식을 사용한다.

	설치
	Custom > Server, Workbench, Sample and Examples, Connector/J

	문제 발생시
	1. 프로그램 추가 제거 들어가서 MySQL 붙은 프로그램 싹 지우기
	2. 컴퓨터 이름 영어로 됐는지 확인(폴더명 한글 쓰지마)
	3. Program Files, Program Files(x86), ProgramData 안에 MySQL 폴더 다 삭제
	4. 재설치

SQL문
	Structured Query Language, 구조화된 질의 언어
	인터프리터 언어 
	한 줄씩 번역되고 빈번한 수정이 있을 때 효율적이다.
	번역과 동시에 실행된다.(번역 파일이 따로 존재하지 않는다.)
	SQL문은 명령 하나에, 실행 한번!

데이터 베이스 생성
	create database 데이터베이스명;

데이터 베이스 삭제
	drop database 데이터베이스명;

데이터베이스 사용
	use 데이터베이스명; (꼭 사용한다는 명령이 있어야 함)

SQL문의 종류
	DDL
	DML(Data Manipulation Language)
	TCL(Transaction Control Language) - DML문에 의한 데이터의 변경 사항을 데이터베이스에 영구히 반영하거나 취소하기 위해 트랜잭션을 제어하는 구문
	DCL - 계정 관련된 명렁


DDL
	Data Definition Language - 데이터 정의어(=테이블을 만든다)
	테이블에 관련된 쿼리문
	테이블에 저장된 데이터를 조작(조회, 입력, 수정, 삭제)하기 위한 구문
	create, drop, alter

자료형을 알아야한다.
	종류
	-------------------------------------------------------------------
	숫자형	
		int		: 정수
		decimal(n,m)	: n(전체자리수), m(소수점자리수)
			ex) decimal(4,2) --> -99.99 ~ 99.99
	-------------------------------------------------------------------	
	문자열형
		char(n)		: n바이트의 문자열(고정형), 빈 자리는 확보된 채 남겨둔다. (정확하게 고정된 문자의 크기가 들어올때, 주민번호, 핸드폰 번호, 성별, ...)
			ex) char(4) ---> [    ] ---> 'A'를 넣으면 ---> [A   ]

	-------------------------------------------------------------------
		varchar(n)	: n바이트의 문자열(가변형), 빈 자리는 할당 해제
			ex) varchar(4) ---> [    ] ----> 'A'를 넣으면 ----> [A]

	-------------------------------------------------------------------
		text		: 매우 긴 문자열
		

	시간형(날짜) - 한 순간 사진을 찍을 수 있다면, 시간 !
		date		: 한 순간의 날짜를 표현, 저장하는 타입
		datetime	: 한 순간의 날짜와 시간을 표현, 저장하는 타입
		timestamp	: 한 순간의 날짜와 시간을 표현, 저장하는 타입(자동기록)

본 수업에서 []의 뜻: 생략 가능하다. (쿼리문에서 문법적으로 대괄호를 사용하지 않는다.)
		

테이블 생성
	create table 테이블명(
		컬럼명1 자료형 [제약조건],
		컬럼명2 자료형 [제약조건],
		...
		[제약조건 선언],
		...
	);

테이블 삭제
	drop table 테이블명;

테이블 수정 - 컬럼 수정(추가, 삭제, 자료형/이름 수정)
	alter table 테이블명

	1. 테이블명 수정
		rename to 새로운이름;
	2. 컬럼 수정
		컬럼 추가
			add(컬럼명 자료형 [제약조건]);
		컬럼 자료형 수정
			modify 기존컬럼명 새로운자료형
		컬럼삭제
			drop 컬럼명;

alter 잘 사용하지 않음 - 추가하는 것보단 drop 후, create문을 새롭게 실행하는 것이 낫겠다.
컬럼을 만드는 것이 테이블 설계이다.

제약 조건
	데이터 관리시 특정한 조건에 맞는 데이터만 삽입될 수 있도록 걸어놓는 조건
-> primary key
	새로 만드는 테이블 -> create문 안에 제약조건 추가
	기존 테이블 -> alter/ add constraint (노추천)
-> foreign key
	constraint 제약조건명 foreign key(제약조건을 줄 컬럼명) references 참고할테이블(참고할컬럼)
	
관계성을 맺은 테이블
	foreign key 제약조건을 부여한 테이블은 자식 테이블
	참고되고 있는 테이블은 부모 테이블

	데이터 추가 / 테이블 생성: 부모 먼저, 그 다음 자식
	데이터 삭제 / 테이블 삭제: 자식 먼저, 그 다음 부모



-------------------- 개인 공부한 내용 ---------------------
데이터베이스 설계(데이터 모델링)

DB 테이블 설계하는 방법에는 크게 하향식 / 상향식 방법이 있다. 
상향식 방법으로 엔티티를 설계하는 과정
1. 기획안을 보며 키워드 뽑기
2. 키워드를 행위와 데이터로 나누기
	- 행위: 행위 엔티티,
	- 데이터: 실제 엔티티
3. 설계한 엔티티 관계(속성, Column, 열) 매핑


관계 매핑에는 식별관계 / 비식별관계가 있다. 
- 식별관계: 부모 테이블의 PK를 자식테이블의 PK로 설정하는 방식
- 비식별관계: 부모 테이블의 PK를 자식 테이블의 FK로 설정하는 방식(구조 변경에 용이하기 때문에 선호)

Row(행, 레코드, 튜플)
	하나의 데이터
	그 줄의 모든 데이터들은 하나의 대상에 대한 데이터이다.

Column(열, 속성, 필드)
	공통된 값들의 주제
	그 열의 모든 데이터들은 같은 속성(ex.가격)의 데이터이다.


개념정리
- 릴레이션(Relation)
	관계형 데이터베이스에서 정보를 구분하여 저장하는 기본 단위. 
	DB Table. 
	현실세계의 어떤 객체(entity)를 표현하고 저장하는데 사용. 객체는 사물이 될 수도, 추상적인 개념이 될 수도 있다. 
- 애트리뷰트(Attribute, 속성)
	내가 저장하고 싶은 개체의 항목들
	ex) create student(학번, 이름, 학과 등이 속성이 된다.)
- 차수(Degree)
	한 릴레이션 안에 있는 속성의 개수
	유효한 릴레이션의 최소 차수는 1이다.
- 카디날리티(Cardinality)
	릴레이션 행의 개수이다.
	아직 데이터가 삽입되지 않은 테이블의 경우 0값을 가질 수 있다.  
- 도메인(Domain)
	릴레이션에 포함된 속성들이 각각 가질 수 있는 값들의 집합(속성이 가지는 값의 범위)
	값의 범위, 데이터 타입, 제약 사항등 설정하는 범위 값의 설정
	ex) 성별 남/여 남=0, 여=1 정의한다면, 0, 1 값 외에는 사용할 수 없게 정의하는 것인 도메인
- 스키마(Schema)
	데이터베이스의 구조와 제약 조건에 관한 전반적인 명세를 기술한 메타데이터의 집합 (*메타데이터: 데이터의 데이터. 다른 데이터를 설명해주는 데이터. =속성정보)
- ISA 관계 (Is a)
	관계형 데이터베이스에서 상속 관계를 나타내는 표현

관계형 데이터베이스의 설계 - 정규형
제 1정규형(1NF)
제 2정규형(2NF)
제 3정규형(3NF)
